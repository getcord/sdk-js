export default {
  PlatformUserVariables: {
    type: 'object',
    properties: {
      email: { format: 'email', type: 'string' },
      name: { type: 'string' },
      short_name: { type: 'string' },
      status: { enum: ['active', 'deleted'], type: 'string' },
      profile_picture_url: { format: 'uri', type: 'string' },
      first_name: { type: 'string' },
      last_name: { type: 'string' },
    },
    additionalProperties: false,
    propertyOrder: [
      'email',
      'name',
      'short_name',
      'status',
      'profile_picture_url',
      'first_name',
      'last_name',
    ],
    required: ['email'],
    $schema: 'http://json-schema.org/draft-07/schema#',
  },
  PlatformOrganizationVariables: {
    type: 'object',
    properties: {
      name: { type: 'string' },
      status: { enum: ['active', 'deleted'], type: 'string' },
      members: { type: 'array', items: { type: ['string', 'number'] } },
    },
    additionalProperties: false,
    propertyOrder: ['name', 'status', 'members'],
    required: ['name'],
    $schema: 'http://json-schema.org/draft-07/schema#',
  },
  UpdatePlatformUserVariables: {
    description: 'https://docs.cord.com/reference/rest-api/users/',
    type: 'object',
    properties: {
      email: { format: 'email', type: 'string' },
      name: { type: 'string' },
      short_name: { type: 'string' },
      status: { enum: ['active', 'deleted'], type: 'string' },
      profile_picture_url: { format: 'uri', type: 'string' },
      first_name: { type: 'string' },
      last_name: { type: 'string' },
    },
    additionalProperties: false,
    propertyOrder: [
      'email',
      'name',
      'short_name',
      'status',
      'profile_picture_url',
      'first_name',
      'last_name',
    ],
    $schema: 'http://json-schema.org/draft-07/schema#',
  },
  UpdatePlatformOrganizationVariables: {
    description: 'https://docs.cord.com/reference/rest-api/organizations/',
    type: 'object',
    properties: {
      name: { type: 'string' },
      status: { enum: ['active', 'deleted'], type: 'string' },
      members: { type: 'array', items: { type: ['string', 'number'] } },
    },
    additionalProperties: false,
    propertyOrder: ['name', 'status', 'members'],
    $schema: 'http://json-schema.org/draft-07/schema#',
  },
  UpdatePlatformOrganizationMembersVariables: {
    description: 'https://docs.cord.com/reference/rest-api/organizations/',
    type: 'object',
    properties: {
      add: { type: 'array', items: { type: ['string', 'number'] } },
      remove: { type: 'array', items: { type: ['string', 'number'] } },
    },
    additionalProperties: false,
    propertyOrder: ['add', 'remove'],
    $schema: 'http://json-schema.org/draft-07/schema#',
  },
  BatchAPIVariables: {
    description: 'https://docs.cord.com/reference/rest-api/batch/',
    type: 'object',
    properties: {
      users: {
        maxItems: 10000,
        type: 'array',
        items: {
          anyOf: [
            {
              additionalProperties: false,
              type: 'object',
              properties: {
                email: { format: 'email', type: 'string' },
                name: { type: 'string' },
                short_name: { type: 'string' },
                status: { enum: ['active', 'deleted'], type: 'string' },
                profile_picture_url: { format: 'uri', type: 'string' },
                first_name: { type: 'string' },
                last_name: { type: 'string' },
                id: {
                  minLength: 1,
                  maxLength: 128,
                  type: ['string', 'number'],
                },
              },
              required: ['email', 'id'],
            },
            {
              additionalProperties: false,
              type: 'object',
              properties: {
                email: { format: 'email', type: 'string' },
                name: { type: 'string' },
                short_name: { type: 'string' },
                status: { enum: ['active', 'deleted'], type: 'string' },
                profile_picture_url: { format: 'uri', type: 'string' },
                first_name: { type: 'string' },
                last_name: { type: 'string' },
                id: {
                  minLength: 1,
                  maxLength: 128,
                  type: ['string', 'number'],
                },
              },
              required: ['id'],
            },
          ],
        },
      },
      organizations: {
        maxItems: 1000,
        type: 'array',
        items: {
          anyOf: [
            {
              additionalProperties: false,
              type: 'object',
              properties: {
                name: { type: 'string' },
                status: { enum: ['active', 'deleted'], type: 'string' },
                members: {
                  type: 'array',
                  items: { type: ['string', 'number'] },
                },
                id: {
                  minLength: 1,
                  maxLength: 128,
                  type: ['string', 'number'],
                },
              },
              required: ['id', 'name'],
            },
            {
              additionalProperties: false,
              type: 'object',
              properties: {
                name: { type: 'string' },
                status: { enum: ['active', 'deleted'], type: 'string' },
                members: {
                  type: 'array',
                  items: { type: ['string', 'number'] },
                },
                id: {
                  minLength: 1,
                  maxLength: 128,
                  type: ['string', 'number'],
                },
              },
              required: ['id'],
            },
          ],
        },
      },
    },
    additionalProperties: false,
    propertyOrder: ['users', 'organizations'],
    $schema: 'http://json-schema.org/draft-07/schema#',
  },
  CreatePlatformUserVariables: {
    additionalProperties: false,
    type: 'object',
    properties: {
      email: { format: 'email', type: 'string' },
      name: { type: 'string' },
      short_name: { type: 'string' },
      status: { enum: ['active', 'deleted'], type: 'string' },
      profile_picture_url: { format: 'uri', type: 'string' },
      first_name: { type: 'string' },
      last_name: { type: 'string' },
      id: { minLength: 1, maxLength: 128, type: ['string', 'number'] },
    },
    required: ['email', 'id'],
    $schema: 'http://json-schema.org/draft-07/schema#',
  },
  CreatePlatformOrganizationVariables: {
    additionalProperties: false,
    type: 'object',
    properties: {
      name: { type: 'string' },
      status: { enum: ['active', 'deleted'], type: 'string' },
      members: { type: 'array', items: { type: ['string', 'number'] } },
      id: { minLength: 1, maxLength: 128, type: ['string', 'number'] },
    },
    required: ['id', 'name'],
    $schema: 'http://json-schema.org/draft-07/schema#',
  },
} as const;
